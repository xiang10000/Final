@model 第五組_期末作業.Models.Product

@{
    ViewBag.Title = "新增產品";
}

<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        /* 全局樣式 */
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Microsoft JhengHei', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px 0;
        }

        /* 主容器 */
        .main-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            padding: 40px;
            margin: 20px auto;
            max-width: 800px;
            animation: fadeInUp 0.8s ease-out;
        }

        /* 標題樣式 */
        h2 {
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-size: 2.5rem;
            font-weight: 700;
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
        }

        h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 2px;
        }

        /* 表單容器 */
        .form-container {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
            margin-top: 2rem;
        }

        /* 表單標籤樣式 */
        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-label::before {
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            color: #667eea;
        }

        /* 為不同欄位添加圖示 */
        .form-label[for*="Name"]::before { content: '\f02b'; }
        .form-label[for*="ProductNumber"]::before { content: '\f02a'; }
        .form-label[for*="Color"]::before { content: '\f53f'; }
        .form-label[for*="StandardCost"]::before { content: '\f155'; }
        .form-label[for*="ListPrice"]::before { content: '\f0d6'; }
        .form-label[for*="Size"]::before { content: '\f547'; }
        .form-label[for*="Weight"]::before { content: '\f496'; }
        .form-label[for*="ProductModelID"]::before { content: '\f1b2'; }
        .form-label[for*="SellStartDate"]::before { content: '\f073'; }
        .form-label[for*="SellEndDate"]::before { content: '\f073'; }
        .form-label[for*="rowguid"]::before { content: '\f2c2'; }
        .form-label[for*="ModifiedDate"]::before { content: '\f073'; }

        /* 輸入框樣式 */
        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 12px 16px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            background: white;
            transform: translateY(-1px);
        }

        /* 表單組樣式 */
        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .form-group:hover .form-control {
            border-color: #667eea;
            background: white;
        }

        /* 按鈕樣式 */
        .btn-primary {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%) !important;
            border: none !important;
            border-radius: 50px !important;
            padding: 15px 30px !important;
            font-weight: 600 !important;
            font-size: 1.1rem !important;
            box-shadow: 0 8px 25px rgba(79, 172, 254, 0.3) !important;
            transition: all 0.3s ease !important;
            display: inline-flex !important;
            align-items: center !important;
            gap: 10px !important;
        }

        .btn-primary:hover {
            transform: translateY(-3px) !important;
            box-shadow: 0 12px 35px rgba(79, 172, 254, 0.4) !important;
        }

        .btn-primary::before {
            content: '\f067';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%) !important;
            border: none !important;
            border-radius: 50px !important;
            padding: 15px 30px !important;
            font-weight: 600 !important;
            font-size: 1.1rem !important;
            box-shadow: 0 8px 25px rgba(108, 117, 125, 0.3) !important;
            transition: all 0.3s ease !important;
            display: inline-flex !important;
            align-items: center !important;
            gap: 10px !important;
        }

        .btn-secondary:hover {
            transform: translateY(-3px) !important;
            box-shadow: 0 12px 35px rgba(108, 117, 125, 0.4) !important;
        }

        .btn-secondary::before {
            content: '\f053';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
        }

        /* 驗證錯誤訊息樣式 */
        .text-danger {
            color: #e74c3c !important;
            font-size: 0.875rem;
            margin-top: 5px;
        }

        /* 驗證總結樣式 */
        .validation-summary-errors {
            background: linear-gradient(135deg, rgba(231, 76, 60, 0.1), rgba(192, 57, 43, 0.1));
            border: 1px solid #e74c3c;
            border-radius: 12px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .validation-summary-errors ul {
            margin: 0;
            padding-left: 20px;
        }

        .validation-summary-errors li {
            color: #e74c3c;
            margin-bottom: 5px;
        }

        /* 響應式設計 */
    
            h2 {
                font-size: 2rem;
            }

            .form-container {
                padding: 20px;
            }

            .btn-primary,
            .btn-secondary {
                width: 100%;
                margin-bottom: 10px;
                justify-content: center;
            }
        }

        /* 動畫 */
   

        .form-group {
            animation: slideInLeft 0.5s ease-out;
            animation-fill-mode: both;
        }

        .form-group:nth-child(1) { animation-delay: 0.1s; }
        .form-group:nth-child(2) { animation-delay: 0.2s; }
        .form-group:nth-child(3) { animation-delay: 0.3s; }
        .form-group:nth-child(4) { animation-delay: 0.4s; }
        .form-group:nth-child(5) { animation-delay: 0.5s; }
        .form-group:nth-child(6) { animation-delay: 0.6s; }
        .form-group:nth-child(7) { animation-delay: 0.7s; }
        .form-group:nth-child(8) { animation-delay: 0.8s; }
        .form-group:nth-child(9) { animation-delay: 0.9s; }
        .form-group:nth-child(10) { animation-delay: 1.0s; }
        .form-group:nth-child(11) { animation-delay: 1.1s; }
        .form-group:nth-child(12) { animation-delay: 1.2s; }



        /* 特殊欄位樣式 */
        input[type="date"] {
            background-image: none;
        }

        /* 價格欄位特殊樣式 */
        input[name*="Cost"],
        input[name*="Price"] {
            position: relative;
        }

        .price-field {
            position: relative;
        }

        .price-field::before {
            content: '$';
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #27ae60;
            font-weight: 700;
            z-index: 1;
        }

        .price-field input {
            padding-left: 35px;
        }

        /* 按鈕容器 */
        .button-container {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid #e9ecef;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="main-container">
            <h2>新增產品</h2>

            <div class="form-container">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger validation-summary-errors" })

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="Name">產品名稱</label>
                                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入產品名稱" } })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="ProductNumber">產品代碼</label>
                                @Html.EditorFor(m => m.ProductNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入產品代碼" } })
                                @Html.ValidationMessageFor(m => m.ProductNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="Color">顏色</label>
                                @Html.EditorFor(m => m.Color, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入顏色" } })
                                @Html.ValidationMessageFor(m => m.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group price-field">
                                <label class="form-label" for="StandardCost">標準成本</label>
                                @Html.EditorFor(m => m.StandardCost, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00", type = "number", step = "0.01", min = "0" } })
                                @Html.ValidationMessageFor(m => m.StandardCost, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group price-field">
                                <label class="form-label" for="ListPrice">定價</label>
                                @Html.EditorFor(m => m.ListPrice, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00", type = "number", step = "0.01", min = "0" } })
                                @Html.ValidationMessageFor(m => m.ListPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="Size">尺寸</label>
                                @Html.EditorFor(m => m.Size, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入尺寸" } })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="Weight">重量</label>
                                @Html.EditorFor(m => m.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00", type = "number", step = "0.01", min = "0" } })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="ProductModelID">模型ID</label>
                                @Html.EditorFor(m => m.ProductModelID, new { htmlAttributes = new { @class = "form-control", placeholder = "請輸入模型ID", type = "number" } })
                                @Html.ValidationMessageFor(m => m.ProductModelID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="SellStartDate">上架日期</label>
                                @Html.TextBoxFor(m => m.SellStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                @Html.ValidationMessageFor(m => m.SellStartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="SellEndDate">下架日期</label>
                                @Html.TextBoxFor(m => m.SellEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                @Html.ValidationMessageFor(m => m.SellEndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="rowguid">唯一識別碼</label>
                                @Html.EditorFor(m => m.rowguid, new { htmlAttributes = new { @class = "form-control", placeholder = "系統自動產生" } })
                                @Html.ValidationMessageFor(m => m.rowguid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label" for="ModifiedDate">修改日期</label>
                                @Html.TextBoxFor(m => m.ModifiedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                @Html.ValidationMessageFor(m => m.ModifiedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="button-container">
                        <button type="submit" class="btn btn-primary">新增產品</button>
                        @Html.ActionLink("返回列表", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // 為價格欄位添加貨幣符號
            const priceFields = document.querySelectorAll('.price-field');
            priceFields.forEach(field => {
                const input = field.querySelector('input');
                if (input) {
                    // 添加焦點效果
                    input.addEventListener('focus', function () {
                        this.parentElement.style.transform = 'scale(1.02)';
                    });

                    input.addEventListener('blur', function () {
                        this.parentElement.style.transform = 'scale(1)';
                    });
                }
            });

            // 表單提交動畫
            const form = document.querySelector('form');
            const submitBtn = document.querySelector('.btn-primary');

            form.addEventListener('submit', function (e) {
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 新增中...';
                submitBtn.disabled = true;
            });

            // 輸入框動畫效果
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('focus', function () {
                    this.parentElement.style.transform = 'translateX(5px)';
                });

                input.addEventListener('blur', function () {
                    this.parentElement.style.transform = 'translateX(0)';
                });
            });

            // 自動設定今天的日期（如果欄位為空）
            const dateInputs = document.querySelectorAll('input[type="date"]');
            const today = new Date().toISOString().split('T')[0];

            dateInputs.forEach(input => {
                if (!input.value && input.name.includes('ModifiedDate')) {
                    input.value = today;
                }
            });
        });
    </script>
</body>
</html>